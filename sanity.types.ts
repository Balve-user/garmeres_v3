/**
 * ---------------------------------------------------------------------------------
 * This file has been generated by Sanity TypeGen.
 * Command: `sanity typegen generate`
 *
 * Any modifications made directly to this file will be overwritten the next time
 * the TypeScript definitions are generated. Please make changes to the Sanity
 * schema definitions and/or GROQ queries if you need to update these types.
 *
 * For more information on how to use Sanity TypeGen, visit the official documentation:
 * https://www.sanity.io/docs/sanity-typegen
 * ---------------------------------------------------------------------------------
 */

// Source: schema.json
export type SanityImagePaletteSwatch = {
  _type: "sanity.imagePaletteSwatch";
  background?: string;
  foreground?: string;
  population?: number;
  title?: string;
};

export type SanityImagePalette = {
  _type: "sanity.imagePalette";
  darkMuted?: SanityImagePaletteSwatch;
  lightVibrant?: SanityImagePaletteSwatch;
  darkVibrant?: SanityImagePaletteSwatch;
  vibrant?: SanityImagePaletteSwatch;
  dominant?: SanityImagePaletteSwatch;
  lightMuted?: SanityImagePaletteSwatch;
  muted?: SanityImagePaletteSwatch;
};

export type SanityImageDimensions = {
  _type: "sanity.imageDimensions";
  height?: number;
  width?: number;
  aspectRatio?: number;
};

export type SanityFileAsset = {
  _id: string;
  _type: "sanity.fileAsset";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  originalFilename?: string;
  label?: string;
  title?: string;
  description?: string;
  altText?: string;
  sha1hash?: string;
  extension?: string;
  mimeType?: string;
  size?: number;
  assetId?: string;
  uploadId?: string;
  path?: string;
  url?: string;
  source?: SanityAssetSourceData;
};

export type Geopoint = {
  _type: "geopoint";
  lat?: number;
  lng?: number;
  alt?: number;
};

export type ContactInformation = {
  _id: string;
  _type: "contact-information";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  email?: string;
  phone?: string;
  address?: {
    co?: string;
    streetAddress?: string;
    zipCode?: string;
    city?: string;
    country?: string;
  };
};

export type OrganisationInformation = {
  _id: string;
  _type: "organisation-information";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  name?: string;
  orgNumber?: string;
  boardMembers?: Array<{
    _ref: string;
    _type: "reference";
    _weak?: boolean;
    _key: string;
    [internalGroqTypeReferenceTo]?: "person";
  }>;
};

export type BankInformation = {
  _id: string;
  _type: "bank-information";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  vipps?: string;
  bankAccount?: string;
  iban?: string;
  swift?: string;
};

export type MembershipRegistration = {
  _id: string;
  _type: "membership-registration";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  iframeSrc?: string;
  termsAndConditions?: {
    title?: string;
    body?: Array<{
      children?: Array<{
        marks?: Array<string>;
        text?: string;
        _type: "span";
        _key: string;
      }>;
      style?: "normal" | "h1" | "h2" | "h3" | "h4" | "h5" | "h6" | "blockquote";
      listItem?: "bullet" | "number";
      markDefs?: Array<{
        href?: string;
        _type: "link";
        _key: string;
      }>;
      level?: number;
      _type: "block";
      _key: string;
    }>;
  };
};

export type Person = {
  _id: string;
  _type: "person";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  image?: {
    _ref: string;
    _type: "reference";
    _weak?: boolean;
    [internalGroqTypeReferenceTo]?: "reusable-image";
  };
  name?: string;
  email?: string;
  title?: Array<{
    _key: string;
  } & InternationalizedArrayStringValue>;
  pronouns?: Array<{
    _key: string;
  } & InternationalizedArrayStringValue>;
  description?: Array<{
    _key: string;
  } & InternationalizedArrayTextValue>;
};

export type ReusableImage = {
  _id: string;
  _type: "reusable-image";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  name?: string;
  image?: {
    asset: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    media?: unknown;
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    _type: "image";
  };
  alt?: Array<{
    _key: string;
  } & InternationalizedArrayStringValue>;
  attribution?: Array<{
    _key: string;
  } & InternationalizedArrayStringValue>;
  title?: Array<{
    _key: string;
  } & InternationalizedArrayStringValue>;
  caption?: Array<{
    _key: string;
  } & InternationalizedArrayStringValue>;
};

export type Accordion = {
  _type: "accordion";
  summary?: string;
  text?: Array<{
    children?: Array<{
      marks?: Array<string>;
      text?: string;
      _type: "span";
      _key: string;
    }>;
    style?: "normal" | "h1" | "h2" | "h3" | "h4" | "h5" | "h6" | "blockquote";
    listItem?: "bullet" | "number";
    markDefs?: Array<{
      href?: string;
      _type: "link";
      _key: string;
    }>;
    level?: number;
    _type: "block";
    _key: string;
  }>;
};

export type MembershipRegistrationForm = {
  _type: "membership-registration-form";
  children?: Array<{
    marks?: Array<string>;
    text?: string;
    _type: "span";
    _key: string;
  }>;
  style?: "normal" | "h1" | "h2" | "h3" | "h4" | "h5" | "h6" | "blockquote";
  listItem?: "bullet" | "number";
  markDefs?: Array<{
    href?: string;
    _type: "link";
    _key: string;
  }>;
  level?: number;
};

export type EventsBrowser = {
  _type: "events-browser";
  language?: "en" | "se";
};

export type BlogBrowser = {
  _type: "blog-browser";
  language?: "en" | "se";
};

export type CallToAction = {
  _type: "call-to-action";
  title?: string;
  link?: {
    _ref: string;
    _type: "reference";
    _weak?: boolean;
    [internalGroqTypeReferenceTo]?: "page";
  } | {
    _ref: string;
    _type: "reference";
    _weak?: boolean;
    [internalGroqTypeReferenceTo]?: "blog-post";
  };
};

export type Contact = {
  _id: string;
  _type: "contact";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  email?: string;
  orgNumber?: string;
  address?: string;
  vipps?: string;
  bankAccount?: string;
  iban?: string;
  swift?: string;
  facebook?: string;
  instagram?: string;
};

export type SanityImageCrop = {
  _type: "sanity.imageCrop";
  top?: number;
  bottom?: number;
  left?: number;
  right?: number;
};

export type SanityImageHotspot = {
  _type: "sanity.imageHotspot";
  x?: number;
  y?: number;
  height?: number;
  width?: number;
};

export type SanityImageAsset = {
  _id: string;
  _type: "sanity.imageAsset";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  originalFilename?: string;
  label?: string;
  title?: string;
  description?: string;
  altText?: string;
  sha1hash?: string;
  extension?: string;
  mimeType?: string;
  size?: number;
  assetId?: string;
  uploadId?: string;
  path?: string;
  url?: string;
  metadata?: SanityImageMetadata;
  source?: SanityAssetSourceData;
};

export type SanityAssetSourceData = {
  _type: "sanity.assetSourceData";
  name?: string;
  id?: string;
  url?: string;
};

export type SanityImageMetadata = {
  _type: "sanity.imageMetadata";
  location?: Geopoint;
  dimensions?: SanityImageDimensions;
  palette?: SanityImagePalette;
  lqip?: string;
  blurHash?: string;
  hasAlpha?: boolean;
  isOpaque?: boolean;
};

export type PortableText = Array<{
  children?: Array<{
    marks?: Array<string>;
    text?: string;
    _type: "span";
    _key: string;
  }>;
  style?: "normal" | "h1" | "h2" | "h3" | "h4" | "h5" | "h6" | "blockquote";
  listItem?: "bullet" | "number";
  markDefs?: Array<{
    href?: string;
    _type: "link";
    _key: string;
  }>;
  level?: number;
  _type: "block";
  _key: string;
} | {
  asset?: {
    _ref: string;
    _type: "reference";
    _weak?: boolean;
    [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
  };
  media?: unknown;
  hotspot?: SanityImageHotspot;
  crop?: SanityImageCrop;
  alt?: string;
  attribution?: string;
  title?: string;
  caption?: string;
  _type: "portable-image";
  _key: string;
} | {
  _key: string;
} & BlogBrowser | {
  _key: string;
} & EventsBrowser | {
  _key: string;
} & MembershipRegistrationForm | {
  _key: string;
} & Accordion>;

export type InternationalizedArrayTextValue = {
  _type: "internationalizedArrayTextValue";
  value?: string;
};

export type InternationalizedArrayStringValue = {
  _type: "internationalizedArrayStringValue";
  value?: string;
};

export type InternationalizedArrayText = Array<{
  _key: string;
} & InternationalizedArrayTextValue>;

export type InternationalizedArrayString = Array<{
  _key: string;
} & InternationalizedArrayStringValue>;

export type TranslationMetadata = {
  _id: string;
  _type: "translation.metadata";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  translations?: Array<{
    _key: string;
  } & InternationalizedArrayReferenceValue>;
  schemaTypes?: Array<string>;
};

export type InternationalizedArrayReferenceValue = {
  _type: "internationalizedArrayReferenceValue";
  value?: {
    _ref: string;
    _type: "reference";
    _weak?: boolean;
    [internalGroqTypeReferenceTo]?: "page";
  } | {
    _ref: string;
    _type: "reference";
    _weak?: boolean;
    [internalGroqTypeReferenceTo]?: "blog-post";
  } | {
    _ref: string;
    _type: "reference";
    _weak?: boolean;
    [internalGroqTypeReferenceTo]?: "seo";
  };
};

export type Seo = {
  _id: string;
  _type: "seo";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  siteTitle?: string;
  siteUrl?: string;
  siteDescription?: string;
  siteThumbnail?: {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    media?: unknown;
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    alt?: string;
    attribution?: string;
    title?: string;
    caption?: string;
    _type: "portable-image";
  };
  siteCreator?: string;
  sitePublisher?: string;
  googleSiteVerification?: string;
  keywords?: Array<string>;
  language?: string;
};

export type BlogPost = {
  _id: string;
  _type: "blog-post";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  title?: string;
  slug?: Slug;
  thumbnail?: {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    media?: unknown;
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    alt?: string;
    attribution?: string;
    title?: string;
    caption?: string;
    _type: "portable-image";
  };
  body?: PortableText;
  language?: string;
};

export type Page = {
  _id: string;
  _type: "page";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  title?: string;
  slug?: Slug;
  featured?: Featured;
  body?: PortableText;
  backgroundImage?: {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    media?: unknown;
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    alt?: string;
    attribution?: string;
    title?: string;
    caption?: string;
    _type: "portable-image";
  };
  menuIndex?: number;
  language?: string;
};

export type PortableImage = {
  _type: "portable-image";
  asset?: {
    _ref: string;
    _type: "reference";
    _weak?: boolean;
    [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
  };
  media?: unknown;
  hotspot?: SanityImageHotspot;
  crop?: SanityImageCrop;
  alt?: string;
  attribution?: string;
  title?: string;
  caption?: string;
};

export type Featured = {
  _type: "featured";
  title?: string;
  text?: string;
  callToAction?: CallToAction;
};

export type Slug = {
  _type: "slug";
  current?: string;
  source?: string;
};

export type InternationalizedArrayReference = Array<{
  _key: string;
} & InternationalizedArrayReferenceValue>;

export type AllSanitySchemaTypes = SanityImagePaletteSwatch | SanityImagePalette | SanityImageDimensions | SanityFileAsset | Geopoint | ContactInformation | OrganisationInformation | BankInformation | MembershipRegistration | Person | ReusableImage | Accordion | MembershipRegistrationForm | EventsBrowser | BlogBrowser | CallToAction | Contact | SanityImageCrop | SanityImageHotspot | SanityImageAsset | SanityAssetSourceData | SanityImageMetadata | PortableText | InternationalizedArrayTextValue | InternationalizedArrayStringValue | InternationalizedArrayText | InternationalizedArrayString | TranslationMetadata | InternationalizedArrayReferenceValue | Seo | BlogPost | Page | PortableImage | Featured | Slug | InternationalizedArrayReference;
export declare const internalGroqTypeReferenceTo: unique symbol;
// Source: ./sanity/lib/queries.ts
// Variable: DOCUMENTS_QUERY
// Query: *[_type == "page" || _type == "blog-post"] {    ...,}
export type DOCUMENTS_QUERYResult = Array<{
  _id: string;
  _type: "blog-post";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  title?: string;
  slug?: Slug;
  thumbnail?: {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    media?: unknown;
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    alt?: string;
    attribution?: string;
    title?: string;
    caption?: string;
    _type: "portable-image";
  };
  body?: PortableText;
  language?: string;
} | {
  _id: string;
  _type: "page";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  title?: string;
  slug?: Slug;
  featured?: Featured;
  body?: PortableText;
  backgroundImage?: {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    media?: unknown;
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    alt?: string;
    attribution?: string;
    title?: string;
    caption?: string;
    _type: "portable-image";
  };
  menuIndex?: number;
  language?: string;
}>;
// Variable: PAGES_QUERY
// Query: *[_type == "page" && defined(language)] {    ...,}
export type PAGES_QUERYResult = Array<{
  _id: string;
  _type: "page";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  title?: string;
  slug?: Slug;
  featured?: Featured;
  body?: PortableText;
  backgroundImage?: {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    media?: unknown;
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    alt?: string;
    attribution?: string;
    title?: string;
    caption?: string;
    _type: "portable-image";
  };
  menuIndex?: number;
  language?: string;
}>;
// Variable: TRANSLATED_PAGES_QUERY
// Query: *[_type == "page" && language == $language] {    ...,}
export type TRANSLATED_PAGES_QUERYResult = Array<{
  _id: string;
  _type: "page";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  title?: string;
  slug?: Slug;
  featured?: Featured;
  body?: PortableText;
  backgroundImage?: {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    media?: unknown;
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    alt?: string;
    attribution?: string;
    title?: string;
    caption?: string;
    _type: "portable-image";
  };
  menuIndex?: number;
  language?: string;
}>;
// Variable: BLOG_POSTS_QUERY
// Query: *[_type == "blog-post" && defined(language)] {    ...,}
export type BLOG_POSTS_QUERYResult = Array<{
  _id: string;
  _type: "blog-post";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  title?: string;
  slug?: Slug;
  thumbnail?: {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    media?: unknown;
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    alt?: string;
    attribution?: string;
    title?: string;
    caption?: string;
    _type: "portable-image";
  };
  body?: PortableText;
  language?: string;
}>;
// Variable: TRANSLATED_BLOG_POSTS_QUERY
// Query: *[_type == "blog-post" && language == $language] {...,}
export type TRANSLATED_BLOG_POSTS_QUERYResult = Array<{
  _id: string;
  _type: "blog-post";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  title?: string;
  slug?: Slug;
  thumbnail?: {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    media?: unknown;
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    alt?: string;
    attribution?: string;
    title?: string;
    caption?: string;
    _type: "portable-image";
  };
  body?: PortableText;
  language?: string;
}>;
// Variable: PAGE_QUERY
// Query: *[_type == "page" && slug.current == $slug && language == $language][0]{    ...,    featured {        _type,        text,        title,        callToAction {            title,            link-> {                _id,                _type,                slug,                language            }        }    }   }
export type PAGE_QUERYResult = {
  _id: string;
  _type: "page";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  title?: string;
  slug?: Slug;
  featured: {
    _type: "featured";
    text: string | null;
    title: string | null;
    callToAction: {
      title: string | null;
      link: {
        _id: string;
        _type: "blog-post";
        slug: Slug | null;
        language: string | null;
      } | {
        _id: string;
        _type: "page";
        slug: Slug | null;
        language: string | null;
      } | null;
    } | null;
  } | null;
  body?: PortableText;
  backgroundImage?: {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    media?: unknown;
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    alt?: string;
    attribution?: string;
    title?: string;
    caption?: string;
    _type: "portable-image";
  };
  menuIndex?: number;
  language?: string;
} | null;
// Variable: BLOG_POST_QUERY
// Query: *[_type == "blog-post" && slug.current == $slug && language == $language][0]{    ...,}
export type BLOG_POST_QUERYResult = {
  _id: string;
  _type: "blog-post";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  title?: string;
  slug?: Slug;
  thumbnail?: {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    media?: unknown;
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    alt?: string;
    attribution?: string;
    title?: string;
    caption?: string;
    _type: "portable-image";
  };
  body?: PortableText;
  language?: string;
} | null;

// Source: ./sanity/lib/query.ts
// Variable: documentsQuery
// Query: *[_type == "page" || _type == "blog-post"] {		...,	}
export type DocumentsQueryResult = Array<{
  _id: string;
  _type: "blog-post";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  title?: string;
  slug?: Slug;
  thumbnail?: {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    media?: unknown;
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    alt?: string;
    attribution?: string;
    title?: string;
    caption?: string;
    _type: "portable-image";
  };
  body?: PortableText;
  language?: string;
} | {
  _id: string;
  _type: "page";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  title?: string;
  slug?: Slug;
  featured?: Featured;
  body?: PortableText;
  backgroundImage?: {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    media?: unknown;
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    alt?: string;
    attribution?: string;
    title?: string;
    caption?: string;
    _type: "portable-image";
  };
  menuIndex?: number;
  language?: string;
}>;

// Query TypeMap
import "@sanity/client";
declare module "@sanity/client" {
  interface SanityQueries {
    "*[_type == \"page\" || _type == \"blog-post\"] {\n    ...,\n}": DOCUMENTS_QUERYResult;
    "*[_type == \"page\" && defined(language)] {\n    ...,\n}": PAGES_QUERYResult;
    "*[_type == \"page\" && language == $language] {\n    ...,\n}": TRANSLATED_PAGES_QUERYResult;
    "*[_type == \"blog-post\" && defined(language)] {\n    ...,\n}": BLOG_POSTS_QUERYResult;
    "*[_type == \"blog-post\" && language == $language] {\n...,\n}": TRANSLATED_BLOG_POSTS_QUERYResult;
    "*[_type == \"page\" && slug.current == $slug && language == $language][0]{\n    ...,\n    featured {\n        _type,\n        text,\n        title,\n        callToAction {\n            title,\n            link-> {\n                _id,\n                _type,\n                slug,\n                language\n            }\n        }\n    }   \n}": PAGE_QUERYResult;
    "*[_type == \"blog-post\" && slug.current == $slug && language == $language][0]{\n    ...,\n}": BLOG_POST_QUERYResult;
    "\n\t*[_type == \"page\" || _type == \"blog-post\"] {\n\t\t...,\n\t}\n": DocumentsQueryResult;
  }
}
